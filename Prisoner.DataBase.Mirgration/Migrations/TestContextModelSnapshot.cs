// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prisoner.Test;

namespace Prisoner.DataBase.Mirgration.Migrations
{
    [DbContext(typeof(TestContext))]
    partial class TestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview.19074.3");

            modelBuilder.Entity("Prisoner.Test.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("NextQuestionId");

                    b.Property<int>("QuestionId");

                    b.Property<int?>("Result");

                    b.Property<string>("ResultText");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("NextQuestionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("Prisoner.Test.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Picture");

                    b.Property<int?>("State");

                    b.Property<string>("Text");

                    b.Property<double>("X");

                    b.Property<double>("Y");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Prisoner.Test.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Pictute");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("Prisoner.Test.Answer", b =>
                {
                    b.HasOne("Prisoner.Test.Question", "NextQuestion")
                        .WithMany()
                        .HasForeignKey("NextQuestionId");

                    b.HasOne("Prisoner.Test.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
